name: Security Checks

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  security:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install bandit ruff mypy
      - name: Create reports directory
        run: mkdir -p reports
      - name: Install Trivy
        run: |
          sudo apt-get update
          sudo apt-get install wget apt-transport-https gnupg lsb-release
          wget -qO - https://aquasecurity.github.io/trivy-repo/deb/public.key | sudo apt-key add -
          echo "deb https://aquasecurity.github.io/trivy-repo/deb $(lsb_release -sc) main" | sudo tee -a /etc/apt/sources.list.d/trivy.list
          sudo apt-get update
          sudo apt-get install trivy
      - name: Run bandit
        run: bandit -r . || true
      - name: Run ruff
        run: ruff check . || true
      - name: Run mypy
        run: mypy . || true
      - name: Run Trivy filesystem scan
        id: trivy-filesystem
        run: |
          trivy fs --format json -o reports/trivy_fs_report.json --severity CRITICAL,HIGH --exit-code 0 . || true
      - name: Check for Dockerfile
        id: check_dockerfile
        run: |
          if [ -f "Dockerfile" ]; then
            echo "dockerfile_exists=true" >> $GITHUB_OUTPUT
          else
            echo "dockerfile_exists=false" >> $GITHUB_OUTPUT
          fi
      - name: Run Trivy image scan (if Dockerfile present)
        if: steps.check_dockerfile.outputs.dockerfile_exists == 'true' || github.event_name == 'push'
        run: |
          docker pull alpine:3.18 || true
          trivy image --format json -o reports/trivy_image_report.json --severity CRITICAL,HIGH --exit-code 0 $(basename $(pwd)) || true
      - name: Install TruffleHog
        run: |
          curl -sSfL https://raw.githubusercontent.com/trufflesecurity/trufflehog/main/scripts/install.sh | sh -s -- -b /usr/local/bin
      - name: TruffleHog secret scan
        run: |
          trufflehog git file://. --json --no-update > reports/trufflehog_report.json || true
      - name: Upload security reports
        uses: actions/upload-artifact@v4
        with:
          name: security-reports
          path: |
            reports/**

