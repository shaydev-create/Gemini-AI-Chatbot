name: 🚀 CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  PYTHON_VERSION: '3.12'

jobs:
  test:
    name: 🧪 Tests & Quality
    runs-on: ubuntu-latest
    timeout-minutes: 15
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🐍 Set up Python ${{ env.PYTHON_VERSION }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: 📦 Cache Poetry dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pypoetry
          key: ${{ runner.os }}-poetry-${{ hashFiles('**/poetry.lock') }}

      - name: 🎨 Install Poetry
        uses: snok/install-poetry@v1

      - name: 📋 Install dependencies
        run: poetry install --with dev --no-interaction

      - name: 🔧 Format & Lint
        run: |
          poetry run ruff format --check app/ tests/
          poetry run ruff check app/ tests/

      - name: 🧪 Run tests with coverage
        run: poetry run pytest tests/ -v --cov=app --cov-report=xml --maxfail=5

      - name: 📤 Upload coverage
        uses: codecov/codecov-action@v4
        with:
          file: ./coverage.xml
        continue-on-error: true