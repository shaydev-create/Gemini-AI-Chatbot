# Dockerfile para desarrollo
FROM python:3.12-slim

# Variables de entorno
ENV PYTHONUNBUFFERED=1 \
    PYTHONDONTWRITEBYTECODE=1 \
    FLASK_ENV="development" \
    FLASK_DEBUG="1" \
    FLASK_RUN_HOST="0.0.0.0" \
    FLASK_RUN_PORT="5000" \
    FLASK_USE_RELOADER="false"

# Instalar dependencias del sistema
RUN apt-get update && \
    apt-get install -y --no-install-recommends curl build-essential && \
    rm -rf /var/lib/apt/lists/*

# Instalar Poetry
RUN pip install poetry

# Configurar Poetry para no crear virtual environment
ENV POETRY_VIRTUALENVS_CREATE=false

# Crear usuario no-root
RUN addgroup --system appgroup && adduser --system --ingroup appgroup appuser

# Crear directorio de trabajo
WORKDIR /app

# Copiar archivos de dependencias
COPY poetry.lock pyproject.toml ./

# Instalar dependencias directamente en el sistema (incluyendo dev para desarrollo)
RUN poetry install --no-root

# Copiar el código de la aplicación
COPY . .

# Crear directorios necesarios
RUN mkdir -p instance logs uploads && \
    chown -R appuser:appgroup /app

# Cambiar al usuario no-root
USER appuser

# Exponer puerto
EXPOSE 5000

# Comando por defecto
CMD ["python", "run.py"]