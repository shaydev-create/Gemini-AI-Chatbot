[tool:pytest]
# Configuración de pytest para Gemini AI Chatbot

# Directorios de tests
testpaths = tests

# Patrones de archivos de test
python_files = test_*.py *_test.py

# Patrones de clases de test
python_classes = Test*

# Patrones de funciones de test
python_functions = test_*

# Marcadores personalizados
markers =
    unit: Tests unitarios
    integration: Tests de integración
    security: Tests de seguridad
    performance: Tests de rendimiento
    slow: Tests que tardan más tiempo
    auth: Tests de autenticación
    api: Tests de API
    database: Tests de base de datos
    file_upload: Tests de carga de archivos

# Opciones por defecto
addopts = 
    --strict-markers
    --strict-config
    --verbose
    --tb=short
    --cov=src
    --cov=core
    --cov-report=html:htmlcov
    --cov-report=term-missing
    --cov-fail-under=80
    --durations=10

# Configuración de cobertura
[coverage:run]
source = src, core
omit = 
    */tests/*
    */venv/*
    */env/*
    */__pycache__/*
    */migrations/*
    */node_modules/*

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    raise AssertionError
    raise NotImplementedError
    if __name__ == .__main__.:
    class .*\(Protocol\):
    @(abc\.)?abstractmethod

[coverage:html]
directory = htmlcov