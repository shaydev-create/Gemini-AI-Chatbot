[pytest]
minversion = 7.0
asyncio_mode = auto
addopts = 
    -ra
    --strict-markers
    --strict-config
    --cov=app
    --cov-report=term-missing:skip-covered
    --cov-report=html:htmlcov
    --cov-report=xml
    --tb=short
    --maxfail=5
    -x
    --disable-warnings
    --no-header
    --quiet

testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*

asyncio_mode = auto

markers =
    asyncio: marks tests as async
    slow: marks tests as slow (deselect with '-m "not slow"')
    integration: marks tests as integration tests
    unit: marks tests as unit tests
    auth: marks tests related to authentication
    api: marks tests related to API endpoints
    database: marks tests related to database operations

filterwarnings =
    ignore::DeprecationWarning
    ignore::UserWarning
    ignore::RuntimeWarning
    ignore:.*unclosed.*:ResourceWarning
    ignore:.*PytestUnknownMarkWarning.*

log_cli = false
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(name)s: %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

# Configuraci√≥n de cobertura
[coverage:run]
source = app
omit = 
    */tests/*
    */__main__.py
    app/static/*
    app/templates/*
    app/migrations/*
    */venv/*
    */.venv/*

[coverage:report]
fail_under = 20
show_missing = true
skip_covered = true
exclude_lines =
    pragma: no cover
    def __repr__
    if __name__ == .__main__.:
    if self.debug:
    raise NotImplementedError
    raise AssertionError
    @abstractmethod